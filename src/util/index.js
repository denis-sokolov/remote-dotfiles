'use strict';

var concat = require('gulp-concat');
var through2 = require('through2');

var not = function(f){
	return function(){
		return !f.apply(this, arguments);
	};
};

var api = {};

api.append = function(txt){
	return through2.obj(function(chunk, enc, cb){
		chunk.contents = Buffer.concat([
			chunk.contents,
			new Buffer('\n' + txt.trim() + '\n')
		]);
		this.push(chunk);
		cb();
	});
};

api.concat = concat;

api.comment = function(chr, txt){
	return through2.obj(function(chunk, enc, cb){
		var lines = ('This file is automatically generated and overwritten\n' + txt || '')
			.split('\n');
		chunk.contents = Buffer.concat([
			new Buffer(lines.map(function(l){ return chr + l + '\n'; }).join('')),
			chunk.contents
		]);
		this.push(chunk);
		cb();
	});
};

api.setting = function(app, name, type){
	var f = api.settings(app, name, type);
	return function(){
		return (f() || [])[0];
	};
};

api.settings = function(app, name, type){
	var args;
	var called = false;

	app[name] = function(){
		if (called) throw new Error('Can not change settings once set');
		called = true;
		args = Array.prototype.slice.call(arguments);
		if (type && args.filter(not(type)).length)
			throw new Error('Invalid argument type');
		return app;
	};

	return function(){
		return args;
	};
};

module.exports = api;
